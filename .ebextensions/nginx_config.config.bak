files:
  /etc/nginx/conf.d/elasticbeanstalk/webapp.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      # Default server block
      server {
          listen 80 default_server;
          # Set root directory for your application files deployed by EB
          root /var/app/current;

          # Serve index.html for the root path
          location / {
              try_files $uri $uri/ /index.html;
          }

          # Serve other static files directly (adjust paths/extensions if needed)
          # This example covers files in /images/ and specific JS files
          location ~ ^/(images/|script\.js|sub\.js|.*\.css|.*\.html) {
              try_files $uri =404;
              expires 1d; # Optional: cache static files in browser for 1 day
          }

          # Proxy API requests (starting with /api) to the Gunicorn backend
          location /api {
              proxy_pass          http://127.0.0.1:8000; # Gunicorn listens here (from Procfile)
              proxy_http_version  1.1;

              # Standard proxy headers
              proxy_set_header    Connection          $connection_upgrade;
              proxy_set_header    Upgrade             $http_upgrade;
              proxy_set_header    Host                $host;
              proxy_set_header    X-Real-IP           $remote_addr;
              proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
              proxy_set_header    X-Forwarded-Proto   $scheme;
              proxy_set_header    X-Forwarded-Port    $server_port;

              # If your Flask app needs the SCRIPT_NAME, uncomment the following line
              # proxy_set_header    X-Script-Name       /api;
          }

          # Error pages (optional)
          error_page 500 502 503 504 /50x.html;
          location = /50x.html {
              root /usr/share/nginx/html;
          }
      }

# Optional: Add a command to restart nginx after the file is placed
# Although EB usually handles service restarts/reloads on config changes
# container_commands:
#   01_reload_nginx:
#     command: "sudo service nginx reload"